/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientesdb;
import comprobacion.*;
import javax.swing.JOptionPane;
import net.sf.jasperreports.view.JasperViewer;
/**
 * <h7>Mantenimiento Clientes: </h7>
* <ul><h7>public {@link class} MantenimientoClientes {@link extends}
* {@link javax.swing.JDialog}</h7>
* <ul>
* <br>
* Esta clase de tipo JDialog Permite la gestión de los clientes dentro de la 
* aplicación. Funciona de interfaz gráfica con la clase
* {@link clientesdb.GestorDB}
* <br>
* <br>
* <li>
* Actúa sobre la tabla clientes.
* </li>
* <li>
* Permite altas, bajas y modificaciones.
* </li>

* </ul>
* </ul>
 * 
 * @author Mauro di Tullio
 * @see javax.swing.JDialog
 * @see clientesdb.GestorDB
 */
public class MantenimientoClientes extends javax.swing.JDialog {

    
    
    //almaceno en un int el estado de la operación
    /*
    -1 : idle
    0 : alta
    1 : baja
    2 : modificacion
    3 : consulta
    4 : consulta listada
    */
    private int estado;
    //cliente guardado para operativa con DB
    Clientes cli;
    
    
    
    
    /**
     * Creates new form FormularioEntradaDatos
     */
    public MantenimientoClientes() {
        
        initComponents();
        estado = -1;
        ableAll(false);
        cli = new Clientes();
    }
    /**
     * <h7>Constructor: </h7>
    * <ul><h7>public MantenimientoClientes ({@link javax.swing.JFrame} parent,
    * {@link boolean} modal)</h7>
    * <ul>
    * <br>
    * Constructor parametrizado de la clase {@link clientesdb.MantenimientoClientes}
    * <br>
    * <br>
    * <li>
    * Inicializa la variable entera estado a -1 (idle)
    * </li>
    * <li>
    * Llama a la función ableAll con el parámetro false
    * </li>
    * </ul>
    * </ul>
     * 
     * @author Mauro di Tullio
     * @param parent establece el padre de la instancia
     * @param modal determina si es modal o no la instancia construída
     * @see estado(int)
     * @see ableAll(boolean)
     * @see clientesdb.Clientes
     */
    public MantenimientoClientes(javax.swing.JFrame parent, boolean modal){
        super(parent, modal);
        parent.setEnabled(false);
        initComponents();
        estado(-1);
        ableAll(false);
        cli = new Clientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldNIF = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldLetraNIF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldApellidos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldDomicilio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldCP = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldTel = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldLocalidad = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldMovil = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldFax = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemAltas = new javax.swing.JMenuItem();
        jMenuItemBajas = new javax.swing.JMenuItem();
        jMenuItemMods = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemVolver = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemConsulta = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemCporCodigo = new javax.swing.JMenuItem();
        jMenuItemCentreC = new javax.swing.JMenuItem();
        jMenuItemGraf = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Formulario");

        jLabel1.setText("Código");

        jLabel2.setText("N.I.F.");

        jLabel3.setText("Nombre");

        jTextFieldCodigo.setName("Codigo"); // NOI18N
        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });
        jTextFieldCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoKeyPressed(evt);
            }
        });

        jTextFieldNIF.setName("NIF"); // NOI18N
        jTextFieldNIF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNIFActionPerformed(evt);
            }
        });
        jTextFieldNIF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNIFKeyPressed(evt);
            }
        });

        jTextFieldNombre.setName("Nombre"); // NOI18N
        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });
        jTextFieldNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyPressed(evt);
            }
        });

        jTextFieldLetraNIF.setEditable(false);
        jTextFieldLetraNIF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLetraNIFActionPerformed(evt);
            }
        });

        jLabel4.setText("Apellidos");

        jTextFieldApellidos.setName("Apellidos"); // NOI18N
        jTextFieldApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldApellidosActionPerformed(evt);
            }
        });
        jTextFieldApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldApellidosKeyPressed(evt);
            }
        });

        jLabel5.setText("Domicilio");

        jTextFieldDomicilio.setName("Domicilio"); // NOI18N
        jTextFieldDomicilio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDomicilioActionPerformed(evt);
            }
        });
        jTextFieldDomicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldDomicilioKeyPressed(evt);
            }
        });

        jLabel6.setText("C.P.");

        jTextFieldCP.setName("CP"); // NOI18N
        jTextFieldCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCPActionPerformed(evt);
            }
        });
        jTextFieldCP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCPKeyPressed(evt);
            }
        });

        jLabel7.setText("Tel");

        jTextFieldTel.setName("Tel"); // NOI18N
        jTextFieldTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelActionPerformed(evt);
            }
        });
        jTextFieldTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTelKeyPressed(evt);
            }
        });

        jLabel8.setText("Localidad");

        jTextFieldLocalidad.setName("Localidad"); // NOI18N
        jTextFieldLocalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLocalidadActionPerformed(evt);
            }
        });
        jTextFieldLocalidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldLocalidadKeyPressed(evt);
            }
        });

        jTextFieldEmail.setName("e-mail"); // NOI18N
        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });

        jLabel9.setText("e-mail");

        jLabel10.setText("Móvil");

        jTextFieldMovil.setName("Movil"); // NOI18N
        jTextFieldMovil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMovilActionPerformed(evt);
            }
        });
        jTextFieldMovil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMovilKeyPressed(evt);
            }
        });

        jLabel11.setText("Fax");

        jTextFieldFax.setName("Fax"); // NOI18N
        jTextFieldFax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFaxActionPerformed(evt);
            }
        });
        jTextFieldFax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldFaxKeyPressed(evt);
            }
        });

        jLabel12.setText("Total");

        jTextFieldTotal.setEditable(false);
        jTextFieldTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotal.setText("0");
        jTextFieldTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTotalActionPerformed(evt);
            }
        });

        jButtonAceptar.setMnemonic('a');
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setMnemonic('c');
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalir.setMnemonic('s');
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jMenu1.setMnemonic('m');
        jMenu1.setText("Mantenimiento");

        jMenuItemAltas.setMnemonic('a');
        jMenuItemAltas.setText("Altas");
        jMenuItemAltas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAltasActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAltas);

        jMenuItemBajas.setMnemonic('b');
        jMenuItemBajas.setText("Bajas");
        jMenuItemBajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBajasActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemBajas);

        jMenuItemMods.setMnemonic('m');
        jMenuItemMods.setText("Modificación");
        jMenuItemMods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModsActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemMods);
        jMenu1.add(jSeparator1);

        jMenuItemVolver.setMnemonic('v');
        jMenuItemVolver.setText("Volver");
        jMenuItemVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVolverActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemVolver);

        jMenuBar1.add(jMenu1);

        jMenu2.setMnemonic('c');
        jMenu2.setText("Consultas");

        jMenuItemConsulta.setMnemonic('c');
        jMenuItemConsulta.setText("por Código");
        jMenuItemConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConsultaActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemConsulta);

        jMenu3.setMnemonic('l');
        jMenu3.setText("Listados");

        jMenuItemCporCodigo.setMnemonic('c');
        jMenuItemCporCodigo.setText("Por Código");
        jMenuItemCporCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCporCodigoActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemCporCodigo);

        jMenuItemCentreC.setText("Entre Códigos");
        jMenuItemCentreC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCentreCActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemCentreC);

        jMenuItemGraf.setMnemonic('g');
        jMenuItemGraf.setText("Gráfico");
        jMenuItemGraf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGrafActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemGraf);

        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextFieldTel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(85, 85, 85))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldMovil)
                                        .addGap(18, 18, 18))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(199, 199, 199))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel12))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldFax)
                                .addComponent(jTextFieldTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonAceptar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonCancelar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jTextFieldCP, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jTextFieldNIF, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextFieldLetraNIF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(114, 114, 114))
                                        .addComponent(jTextFieldNombre))))
                            .addComponent(jTextFieldDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLetraNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldMovil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptar)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    private void jTextFieldNIFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNIFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNIFActionPerformed

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    private void jTextFieldLetraNIFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLetraNIFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLetraNIFActionPerformed

    private void jTextFieldApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldApellidosActionPerformed

    private void jTextFieldDomicilioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDomicilioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDomicilioActionPerformed

    private void jTextFieldCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCPActionPerformed

    private void jTextFieldTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelActionPerformed

    private void jTextFieldLocalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLocalidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLocalidadActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jTextFieldMovilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMovilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMovilActionPerformed

    private void jTextFieldFaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFaxActionPerformed

    private void jTextFieldTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTotalActionPerformed
/*
 *  Define qué hacer cuando se presiona cancelar: debe vacíar todos los textos
 *  y llevar el foco al primer campo
 */
    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // llama a función para posición inicial
        cancelar();
    }//GEN-LAST:event_jButtonCancelarActionPerformed
/*
 * 
 *  Los textField llaman todos al método "siguiente" con su código tecleado
 *  y el siguiente textField como parámetros
 * 
 */
    private void jTextFieldCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoKeyPressed
        //comprueba el codigo según estado
        if(evt.getKeyCode()==10){
            if(jTextFieldCodigo.getText().matches("[0-9a-zA-Z]{1,6}")){
                while(jTextFieldCodigo.getText().length()<6){
                    jTextFieldCodigo.setText("0".concat(jTextFieldCodigo.getText()));
                }
                if(Comprobar.comprobarCod(jTextFieldCodigo.getText(),estado)){
                    iniciar();
                }
                else{
                    javax.swing.JOptionPane.showConfirmDialog(null,
                        "Operación imposible, el código no es adecuado para la operación",
                        "Formulario incorrecto", javax.swing.JOptionPane.PLAIN_MESSAGE);
                }
            }
            else{
                //TODO: Código inválido
                javax.swing.JOptionPane.showConfirmDialog(null,
                        "Código inválido", "Formulario incorrecto", 
                    javax.swing.JOptionPane.PLAIN_MESSAGE);
            }
        }
        siguiente(evt.getKeyCode(),jTextFieldNIF);
        
    }//GEN-LAST:event_jTextFieldCodigoKeyPressed

    private void jTextFieldNIFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNIFKeyPressed
        
        siguiente(evt.getKeyCode(),jTextFieldNombre);
        
    }//GEN-LAST:event_jTextFieldNIFKeyPressed

    private void jTextFieldNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyPressed
        
        siguiente(evt.getKeyCode(),jTextFieldApellidos);
        
    }//GEN-LAST:event_jTextFieldNombreKeyPressed

    private void jTextFieldApellidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldApellidosKeyPressed
        
        siguiente(evt.getKeyCode(),jTextFieldDomicilio);
        
    }//GEN-LAST:event_jTextFieldApellidosKeyPressed

    private void jTextFieldDomicilioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDomicilioKeyPressed
        
        siguiente(evt.getKeyCode(),jTextFieldCP);
        
    }//GEN-LAST:event_jTextFieldDomicilioKeyPressed

    private void jTextFieldCPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCPKeyPressed
        siguiente(evt.getKeyCode(),jTextFieldLocalidad);
    }//GEN-LAST:event_jTextFieldCPKeyPressed

    private void jTextFieldLocalidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLocalidadKeyPressed
        siguiente(evt.getKeyCode(),jTextFieldTel);
    }//GEN-LAST:event_jTextFieldLocalidadKeyPressed

    private void jTextFieldTelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTelKeyPressed
        siguiente(evt.getKeyCode(),jTextFieldMovil);
    }//GEN-LAST:event_jTextFieldTelKeyPressed

    private void jTextFieldMovilKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMovilKeyPressed
        siguiente(evt.getKeyCode(),jTextFieldFax);
    }//GEN-LAST:event_jTextFieldMovilKeyPressed

    private void jTextFieldFaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFaxKeyPressed
        siguiente(evt.getKeyCode(),jTextFieldEmail);
    }//GEN-LAST:event_jTextFieldFaxKeyPressed
    /**
     * función a realizar al apretar botón aceptar: debe validar todos los
     * campos y realizar acción en función del estado si son válidos,
     * si no son válidos llevará el foco al primer equivocado.
     * 
     */
    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        
        switch(estado){
            // Comprueba si el estado es un alta
            case 0:
                //chequea que todos los campos estén correctamente rellenados
                if(comprobarTodo()){
                    //rellena la letra del NIF
                    jTextFieldLetraNIF.setText(
                            letraNIF(Integer.parseInt(jTextFieldNIF.getText())));
                    //almacena los datos en un objeto Cliente
                    cli.codigo = jTextFieldCodigo.getText();
                    cli.nif = jTextFieldNIF.getText()
                            + jTextFieldLetraNIF.getText();
                    cli.apellidos = jTextFieldApellidos.getText();
                    cli.nombre = jTextFieldNombre.getText();
                    cli.domicilio = jTextFieldDomicilio.getText();
                    cli.codigo_postal = jTextFieldCP.getText();
                    cli.localidad = jTextFieldLocalidad.getText();
                    cli.telefono = jTextFieldTel.getText();
                    cli.movil = jTextFieldMovil.getText();
                    cli.fax = jTextFieldFax.getText();
                    cli.email = jTextFieldEmail.getText();
                    //genera un gestor para la DB
                    GestorDB ges = new GestorDB();
                    
                    //comprueba si pudo realizarse la operación y alerta al 
                    //usuario del resultado
                    if(ges.altaCliente(cli)){
                        javax.swing.JOptionPane.showConfirmDialog(null,
                        "Cliente insertado correctamente", "Formulario correcto", 
                        javax.swing.JOptionPane.PLAIN_MESSAGE);
                        cancelar();
                    }
                    else
                        javax.swing.JOptionPane.showConfirmDialog(null,
                        "Error al INSERTAR CLIENTE", "Error!", 
                        javax.swing.JOptionPane.PLAIN_MESSAGE);
                }
                break;
            case 1:
                //pide al usuario que confirme en un option pane
                if(javax.swing.JOptionPane.showConfirmDialog(null, 
                                "¿Seguro que desea eliminar?","Baja",
                                JOptionPane.YES_NO_OPTION)==0){
                    //llama a la operación de escritura
                    GestorDB ges = new GestorDB();
                    //ejecuta la baja y verifica que se realizó correctamente
                    if( ges.bajaCliente(jTextFieldCodigo.getText())){
                            javax.swing.JOptionPane.showConfirmDialog(null,
                            "Cliente eliminado correctamente", "Formulario correcto", 
                            javax.swing.JOptionPane.PLAIN_MESSAGE);
                            cancelar();
                        }
                        else{
                            javax.swing.JOptionPane.showConfirmDialog(null,
                            "Error al MODIFICAR CLIENTE", "Error!", 
                            javax.swing.JOptionPane.PLAIN_MESSAGE);
                        }
                }
                cancelar();
                break;
            case 2:
                //pide al usuario que confirme en un option pane
                if(javax.swing.JOptionPane.showConfirmDialog(null, 
                                "¿Seguro que desea aplicar los cambios?","Baja",
                                JOptionPane.YES_NO_OPTION)==0){
                    //comprueba que los campos sean correctos
                    if(comprobarTodo()){
                        //rellena la letra del NIF
                        jTextFieldLetraNIF.setText(
                                letraNIF(Integer.parseInt(jTextFieldNIF.getText())));
                        //almacena los datos en un objeto Cliente
                        cli.codigo = jTextFieldCodigo.getText();
                        cli.nif = jTextFieldNIF.getText()
                                + jTextFieldLetraNIF.getText();
                        cli.apellidos = jTextFieldApellidos.getText();
                        cli.nombre = jTextFieldNombre.getText();
                        cli.domicilio = jTextFieldDomicilio.getText();
                        cli.codigo_postal = jTextFieldCP.getText();
                        cli.localidad = jTextFieldLocalidad.getText();
                        cli.telefono = jTextFieldTel.getText();
                        cli.movil = jTextFieldMovil.getText();
                        cli.fax = jTextFieldFax.getText();
                        cli.email = jTextFieldEmail.getText();
                        
                        //lanza la secuencia del update y comprueba que se realizó sin errores
                        GestorDB ges = new GestorDB();
                        if(ges.modCliente(jTextFieldCodigo.getText(),cli)){
                            javax.swing.JOptionPane.showConfirmDialog(null,
                            "Cliente modificado correctamente", "Formulario correcto", 
                            javax.swing.JOptionPane.PLAIN_MESSAGE);
                            cancelar();
                        }
                        else{
                            javax.swing.JOptionPane.showConfirmDialog(null,
                            "Error al MODIFICAR CLIENTE", "Error!", 
                            javax.swing.JOptionPane.PLAIN_MESSAGE);
                        }
                    }
                }
                break;
            case 3:
                cancelar();
                break;
            case 4:
                GestorDB ges = new GestorDB();
                JasperViewer jv = ges.ejecutarInforme(jTextFieldCodigo.getText(),
                        jTextFieldCodigo.getText());
                jv.setVisible(true);
                cancelar();
                break;
                
        }
        
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        cancelar();
        //desactiva el campo código para forzar a elegir operación
        jTextFieldCodigo.setEnabled(false);
        //vuelve el estado a idle
        estado(-1);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jMenuItemVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVolverActionPerformed
        //vuelve a la ventana anterior y la activa
        this.getParent().setEnabled(true);
        dispose();
    }//GEN-LAST:event_jMenuItemVolverActionPerformed

    private void jMenuItemAltasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAltasActionPerformed
        // pone el estado en 0: altas
        estado(0);
        
    }//GEN-LAST:event_jMenuItemAltasActionPerformed

    private void jMenuItemBajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBajasActionPerformed
        // pone el estado en 1: bajas
        estado(1);
    }//GEN-LAST:event_jMenuItemBajasActionPerformed

    private void jMenuItemModsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModsActionPerformed
        //pone el estado en 2: modificación
        estado(2);
    }//GEN-LAST:event_jMenuItemModsActionPerformed

    private void jMenuItemConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConsultaActionPerformed
        //pone el estado en 3: consulta
        estado(3);
    }//GEN-LAST:event_jMenuItemConsultaActionPerformed

    private void jMenuItemCporCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCporCodigoActionPerformed
        GestorDB ges = new GestorDB();
                JasperViewer jv = ges.ejecutarInforme("000000", "zzzzzz");
                jv.setVisible(true);
                jv.setEnabled(true);
    }//GEN-LAST:event_jMenuItemCporCodigoActionPerformed

    private void jMenuItemCentreCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCentreCActionPerformed
        Codigos codigos = new Codigos(this,true);
        codigos.setVisible(true);
    }//GEN-LAST:event_jMenuItemCentreCActionPerformed

    private void jMenuItemGrafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGrafActionPerformed
        GestorDB ges = new GestorDB();
        JasperViewer jv = ges.ejecutarPie();
        jv.setVisible(true);
    }//GEN-LAST:event_jMenuItemGrafActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenimientoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenimientoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenimientoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenimientoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MantenimientoClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAltas;
    private javax.swing.JMenuItem jMenuItemBajas;
    private javax.swing.JMenuItem jMenuItemCentreC;
    private javax.swing.JMenuItem jMenuItemConsulta;
    private javax.swing.JMenuItem jMenuItemCporCodigo;
    private javax.swing.JMenuItem jMenuItemGraf;
    private javax.swing.JMenuItem jMenuItemMods;
    private javax.swing.JMenuItem jMenuItemVolver;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldCP;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldDomicilio;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFax;
    private javax.swing.JTextField jTextFieldLetraNIF;
    private javax.swing.JTextField jTextFieldLocalidad;
    private javax.swing.JTextField jTextFieldMovil;
    private javax.swing.JTextField jTextFieldNIF;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldTel;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables

    //función para setear todos los TextFields del formulario al mismo valor
    //usada para el reinicio
    private void setAll(String string){
        jTextFieldNombre.setText(string);
        jTextFieldApellidos.setText(string);
        jTextFieldCP.setText(string);
        jTextFieldCodigo.setText(string);
        jTextFieldDomicilio.setText(string);
        jTextFieldEmail.setText(string);
        jTextFieldFax.setText(string);
        jTextFieldLetraNIF.setText(string);
        jTextFieldLocalidad.setText(string);
        jTextFieldMovil.setText(string);
        jTextFieldNIF.setText(string);
        jTextFieldNombre.setText(string);
        jTextFieldTel.setText(string);
        jTextFieldTotal.setText(string);
    }
    
    /**
     * función para avanzar al siguiente item del formulario al presionar
     * la tecla Intro
     * @param keyCode keyCode de la tecla presionada
     * @param next indica el siguiente elemento del formulario
     */
    private void siguiente(int keyCode,javax.swing.JTextField next){
        if(keyCode==10){
            next.grabFocus();
        }
    }
    
    /**
     * <h7>comprobarTodo: </h7>
    * <ul><h7>private boolean comprobarTodo()</h7>
    * <ul>
    * <br>
    * Función que agrupa las comprobaciones de validación de los campos del 
    * formulario de clientes.
    * <br>
    * <br>
    * <li>
    *  Devuelve true si todas las comprobaciones 
    * devuelven true.
    * </li>
    * <li>
    * En caso contrario ejecuta la funcion {@link noValida(JTextField)}
    * con el primer campo que devuelva false.
    * </li>
    * </ul>
    * </ul>
     * 
     * @author Mauro di Tullio
     * @return true si todas las comprobaciones devuelven true, false en otro caso
     * @see Comprobar#comprobarCampo(String, String)
     * @see noValida(javax.swing.JTextField)
     */
    private boolean comprobarTodo(){
        if (Comprobar.comprobarCampo("NIF",jTextFieldNIF.getText())){
            if(Comprobar.comprobarCampo("Nombre", jTextFieldNombre.getText())){
                if(Comprobar.comprobarCampo("Apellidos", jTextFieldApellidos.getText())){
                    if(Comprobar.comprobarCampo("Domicilio", jTextFieldDomicilio.getText())){
                        if(Comprobar.comprobarCampo("CP", jTextFieldCP.getText())){
                            if(Comprobar.comprobarCampo("Localidad", jTextFieldLocalidad.getText())){
                                if(Comprobar.comprobarCampo("Tel", jTextFieldTel.getText())){
                                    if(Comprobar.comprobarCampo("Tel", jTextFieldMovil.getText())){
                                        if(Comprobar.comprobarCampo("Tel", jTextFieldFax.getText())){
                                            if(Comprobar.comprobarCampo("Email", jTextFieldEmail.getText())){
                                                return true;
                                            }
                                            else{
                                                noValida(jTextFieldEmail);
                                                return false;
                                            }
                                        }
                                        else{
                                            noValida(jTextFieldFax);
                                            return false;
                                        }
                                    }
                                    else{
                                        noValida(jTextFieldMovil);
                                        return false;
                                    }
                                }
                                else{
                                    noValida(jTextFieldTel);
                                    return false;
                                }
                            }
                            else{
                                noValida(jTextFieldLocalidad);
                                return false;
                            }
                        }
                        else{
                            noValida(jTextFieldCP);
                            return false;
                        }
                    }
                    else{
                        noValida(jTextFieldDomicilio);
                        return false;
                    }
                }
                else{
                    noValida(jTextFieldApellidos);
                    return false;
                }
            }
            else{
                noValida(jTextFieldNombre);
                return false; 
            }
        }
        else{
            noValida(jTextFieldNIF);
            return false;
        }
    }
   
    /**
     * <h7>noValida: </h7>
    * <ul><h7>private static void noValida(javax.swing.JTextField)</h7>
    * <ul>
    * <br>
    * Función destinada a ser lanzada desde {@link comprobarTodo()}
    * que lanza un javax.swing.JOptionPane con un mensaje de alerta de
    * formulario incorrecto alertando del campo que no ha validado
    * <br>
    * <br>
    * <li>
    *  Además selecciona el texto y lleva el foco al campo pasado por parámetro
    * </li>
    * </ul>
    * </ul>
     * 
     * @author Mauro di Tullio
     * @param campo JTextField que no ha superado la comprobación
     * @see comprobarTodo()
     */
    private static void noValida(javax.swing.JTextField campo){
        String mensaje = "Hay un error en el campo " + campo.getName();
        javax.swing.JOptionPane.showConfirmDialog(null, mensaje, "Formulario incorrecto", 
                javax.swing.JOptionPane.PLAIN_MESSAGE);
        campo.grabFocus();
        campo.selectAll();
    }
    
    /**
     * <h7>letraNIF: </h7>
    * <ul><h7>private String letraNIF()</h7>
    * <ul>
    * <br>
    * Función para calcular la letra que sigue a un conjunto de números que
    * conforman un NIF según la normativa en España
    * <br>
    * <br>
    * <li>
    * Devuelve un String con un único caracter.
    * </li>
    * </ul>
    * </ul>
     * 
     * @author Mauro di Tullio
     * @return un String con una única letra mayúscula
     */
    private static String letraNIF(Integer dni){
        String juegoCaracteres="TRWAGMYFPDXBNJZSQVHLCKE";
        int modulo = dni % 23;
        Character letra = juegoCaracteres.charAt(modulo);
        return letra.toString(); 
    }
    
    /**
     * <h7>ableAll: </h7>
    * <ul><h7>private void ableAll(boolean state)</h7>
    * <ul>
    * <br>
    * Punción que agrupa las comprobaciones de validación de los campos del 
    * formulario de clientes.
    * <br>
    * <br>
    * <li>
    *  Devuelve true si todas las comprobaciones 
    * devuelven true.
    * </li>
    * <li>
    * En caso contrario ejecuta la funcion {@link noValida(JTextField)}
    * con el primer campo que devuelva false.
    * </li>
    * </ul>
    * </ul>
     * 
     * @author Mauro di Tullio
     * @param state el booleano que indica a qué valor se llevarán los campos
     * @see Comprobar#comprobarCampo(String, String) (int)
     * @see noBalida(JTextField)
     */
    private void ableAll(boolean state){
        jTextFieldNombre.setEnabled(state);
        jTextFieldApellidos.setEnabled(state);
        jTextFieldCP.setEnabled(state);
        jTextFieldCodigo.setEnabled(state);
        jTextFieldDomicilio.setEnabled(state);
        jTextFieldEmail.setEnabled(state);
        jTextFieldFax.setEnabled(state);
        jTextFieldLetraNIF.setEnabled(state);
        jTextFieldLocalidad.setEnabled(state);
        jTextFieldMovil.setEnabled(state);
        jTextFieldNIF.setEnabled(state);
        jTextFieldNombre.setEnabled(state);
        jTextFieldTel.setEnabled(state);
        jTextFieldTotal.setEnabled(state);
        jButtonAceptar.setEnabled(state);
        jButtonCancelar.setEnabled(state);
        jButtonSalir.setEnabled(true);
        
    }
    
    private void mostrar(String codigo){
        
        //llamamos a la función que realiza la consulta para rellenar cada campo
        GestorDB db = new GestorDB();
        jTextFieldNombre.setText(db.getField("nombre",codigo));
        jTextFieldApellidos.setText(db.getField("apellidos",codigo));
        jTextFieldCP.setText(db.getField("codigo_postal",codigo));
        jTextFieldDomicilio.setText(db.getField("domicilio",codigo));
        jTextFieldEmail.setText(db.getField("email",codigo));
        jTextFieldFax.setText(db.getField("fax",codigo));
        jTextFieldTel.setText(db.getField("telefono",codigo));
        jTextFieldTotal.setText(db.getField("total_ventas",codigo));
        jTextFieldLocalidad.setText(db.getField("localidad",codigo));
        jTextFieldMovil.setText(db.getField("movil",codigo));
        
        //tratamos el caso especial del nif
        String letra = db.getField("nif",codigo);
        jTextFieldNIF.setText(letra.replaceAll("[A-Z]", ""));
        letra = String.valueOf(letra.charAt(letra.length()-1));
        jTextFieldLetraNIF.setText(letra);
        
    }
    
    private void ableBotones(boolean state){
        jButtonAceptar.setEnabled(state);
        jButtonCancelar.setEnabled(state);
        jButtonSalir.setEnabled(state);
    }
    
    private void iniciar(){
        switch(estado){
            //comprueba que el estado es un alta
            case 0:
                //permite escribir en todos los campos y lleva el foco al primero
                ableAll(true);
                jTextFieldCodigo.setEnabled(false);
                jTextFieldNIF.grabFocus();
                break;
            //comprueba que el estado es una baja o una consulta
            case 1:
            case 3:
                //me muestra el cliente cuyo código he introducido
                mostrar(jTextFieldCodigo.getText());
                jTextFieldCodigo.setEnabled(false);
                ableBotones(true);
                break;
            case 2:
                //me muestra el cliente cuyo código he introducido.
                mostrar(jTextFieldCodigo.getText());
                //habilita todos los campos
                ableAll(true);
                //deshabilita el campo código
                jTextFieldCodigo.setEnabled(false);
                //lleva el foco al nif
                jTextFieldNIF.grabFocus();
                break;
            case 4:
                GestorDB ges = new GestorDB();
                JasperViewer jv = ges.ejecutarInforme(jTextFieldCodigo.getText(),
                        jTextFieldCodigo.getText());
                jv.setVisible(true);
                cancelar();
                break;
        }
    }
    
    private void cancelar(){
        
        //desactiva todos los campos
        ableAll(false);
        //vuelve al campo código
        jTextFieldCodigo.setEnabled(true);
        jTextFieldCodigo.grabFocus();
        
        //vacía todos los textos
        setAll("");
        
    }
    
    private void estado(int state){
        estado = state;
        String titulo = "Mantenimiento Clientes";
        jMenu1.setEnabled(true);
        jMenu2.setEnabled(true);GestorDB g=new GestorDB();
        switch(state){
            case 0:
                titulo += " - Alta";
                jMenu1.setEnabled(false);
                jMenu2.setEnabled(false);
                break;
            case 1:
                titulo += " - Baja";
                jMenu1.setEnabled(false);
                jMenu2.setEnabled(false);
                break;
            case 2:
                titulo += " - Modificación";
                jMenu1.setEnabled(false);
                jMenu2.setEnabled(false);
                break;
            case 3:
                titulo += " - Consulta";
                jMenu1.setEnabled(false);
                jMenu2.setEnabled(false);
                break;
            case 4:
                titulo += " - Consulta";
                jMenu1.setEnabled(false);
                jMenu2.setEnabled(false);
                break;
        }
        this.setTitle(titulo);
        if(estado != -1)
            jTextFieldCodigo.setEnabled(true);
    }

}

