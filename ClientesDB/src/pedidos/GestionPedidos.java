/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pedidos;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author alumno
 */
public class GestionPedidos extends javax.swing.JDialog {

    Vector listaArts;
    clientesdb.GestorDB gestorDB;
    private int estado;
    /*
    -1: idle
    0: cliente
    1: proveedor
    */
    
    private int facturado;
    /*
    0 : sin lineas nuevas
    1 : con lineas no guardadas
    */
    
    /**
     * Creates new form GestionPedidos
     */
    public GestionPedidos() {
        initComponents();
        gestorDB = new clientesdb.GestorDB();
    }
    
    public GestionPedidos(javax.swing.JFrame parent, boolean modal){
        super(parent, modal);
        parent.setEnabled(false);
        initComponents();
        estado(-1);
        gestorDB = new clientesdb.GestorDB();
        facturado = 0;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNif = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldApellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldDomicilio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldCodPost = new javax.swing.JTextField();
        jTextFieldLocalidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldCodArt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldDescripcion = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldUnidades = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldStock = new javax.swing.JTextField();
        jTextFieldImporte = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButtonBuscarArt = new javax.swing.JButton();
        jButtonSeleccionarArt = new javax.swing.JButton();
        jButtonGrid = new javax.swing.JButton();
        jButtonFactura = new javax.swing.JButton();
        jButtonAceptar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jButtonCanPedido = new javax.swing.JButton();
        jButtonCancelTodo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemProveedor = new javax.swing.JMenuItem();
        jMenuItemCliente = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemVolver = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText("Código");

        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });
        jTextFieldCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoKeyPressed(evt);
            }
        });

        jLabel2.setText("NIF");

        jTextFieldNif.setEditable(false);
        jTextFieldNif.setFocusable(false);
        jTextFieldNif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNifActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre");

        jTextFieldNombre.setEditable(false);
        jTextFieldNombre.setFocusable(false);
        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });

        jLabel4.setText("Apellidos");

        jTextFieldApellido.setEditable(false);
        jTextFieldApellido.setFocusable(false);

        jLabel5.setText("Domicilio");

        jTextFieldDomicilio.setEditable(false);
        jTextFieldDomicilio.setFocusable(false);

        jLabel6.setText("Código Postal");

        jTextFieldCodPost.setEditable(false);
        jTextFieldCodPost.setFocusable(false);

        jTextFieldLocalidad.setEditable(false);
        jTextFieldLocalidad.setFocusable(false);

        jLabel7.setText("Localidad");

        jTextFieldTotal.setEditable(false);
        jTextFieldTotal.setFocusable(false);

        jLabel8.setText("Total");

        jLabel9.setText("--------------------------------------------------------------------------------------------------");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel10.setText("Artículo");

        jLabel11.setText("Código");

        jTextFieldCodArt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodArtKeyPressed(evt);
            }
        });

        jLabel12.setText("Descripción");

        jTextFieldDescripcion.setEditable(false);
        jTextFieldDescripcion.setFocusable(false);
        jTextFieldDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDescripcionActionPerformed(evt);
            }
        });

        jLabel13.setText("Unidades");

        jTextFieldUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUnidadesActionPerformed(evt);
            }
        });
        jTextFieldUnidades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldUnidadesKeyPressed(evt);
            }
        });

        jLabel14.setText("Stock");

        jTextFieldStock.setEditable(false);
        jTextFieldStock.setFocusable(false);

        jTextFieldImporte.setEditable(false);
        jTextFieldImporte.setFocusable(false);

        jTextFieldPrecio.setEditable(false);
        jTextFieldPrecio.setFocusable(false);

        jLabel15.setText("Precio");

        jLabel16.setText("Importe");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Descripción", "Stock", "Precio"
            }
        ));
        jTable.setFocusable(false);
        jScrollPane1.setViewportView(jTable);

        jButtonBuscarArt.setMnemonic('b');
        jButtonBuscarArt.setText("Buscar Artículo");
        jButtonBuscarArt.setEnabled(false);
        jButtonBuscarArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarArtActionPerformed(evt);
            }
        });

        jButtonSeleccionarArt.setMnemonic('s');
        jButtonSeleccionarArt.setText("Seleccionar Artículo");
        jButtonSeleccionarArt.setEnabled(false);
        jButtonSeleccionarArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionarArtActionPerformed(evt);
            }
        });

        jButtonGrid.setText("...");
        jButtonGrid.setEnabled(false);
        jButtonGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGridActionPerformed(evt);
            }
        });

        jButtonFactura.setMnemonic('f');
        jButtonFactura.setText("Factura");
        jButtonFactura.setEnabled(false);
        jButtonFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFacturaActionPerformed(evt);
            }
        });

        jButtonAceptar.setMnemonic('a');
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.setEnabled(false);
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonSalir.setMnemonic('l');
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonCanPedido.setMnemonic('e');
        jButtonCanPedido.setText("Cancelar Pedido");
        jButtonCanPedido.setEnabled(false);
        jButtonCanPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCanPedidoActionPerformed(evt);
            }
        });

        jButtonCancelTodo.setMnemonic('c');
        jButtonCancelTodo.setText("Cancelar Todo");
        jButtonCancelTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelTodoActionPerformed(evt);
            }
        });

        jMenu2.setMnemonic('p');
        jMenu2.setText("Pedidos");

        jMenuItemProveedor.setMnemonic('p');
        jMenuItemProveedor.setText("Proveedor");
        jMenuItemProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemProveedorActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemProveedor);

        jMenuItemCliente.setMnemonic('c');
        jMenuItemCliente.setText("Cliente");
        jMenuItemCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemClienteActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemCliente);
        jMenu2.add(jSeparator1);

        jMenuItemVolver.setMnemonic('v');
        jMenuItemVolver.setText("Volver");
        jMenuItemVolver.setToolTipText("");
        jMenuItemVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVolverActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemVolver);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextFieldApellido, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldDomicilio, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(55, 55, 55)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jTextFieldNif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(50, 50, 50)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jTextFieldCodPost, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jTextFieldTotal)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13)
                                .addComponent(jTextFieldUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15)
                                .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel16)
                                .addComponent(jTextFieldImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jTextFieldCodArt, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonGrid, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(jTextFieldDescripcion)))
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonBuscarArt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSeleccionarArt))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonCanPedido)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonCancelTodo))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonFactura)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonAceptar)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonSalir))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldNif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCodPost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonGrid)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCodArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel16))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscarArt)
                    .addComponent(jButtonSeleccionarArt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFactura)
                    .addComponent(jButtonAceptar)
                    .addComponent(jButtonSalir))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCanPedido)
                    .addComponent(jButtonCancelTodo)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    
    private void jTextFieldNifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNifActionPerformed

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    private void jTextFieldDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescripcionActionPerformed

    private void jButtonBuscarArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarArtActionPerformed
        if(jTextFieldCodArt.getText().matches("[0-9a-zA-Z]{1,6}")){
            while(jTextFieldCodArt.getText().length()<6){
                jTextFieldCodArt.setText("0".concat(jTextFieldCodArt.getText()));
            }
            mostrarArt(jTextFieldCodArt.getText());
        }
    }//GEN-LAST:event_jButtonBuscarArtActionPerformed

    private void jButtonGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGridActionPerformed
        String[] alTitColumn = new String[4];
        alTitColumn[0]= "Código";
        alTitColumn[1]= "Descripción";
        alTitColumn[2]= "Stock";
        alTitColumn[3]= "Precio";
        listaArts = gestorDB.getTodosArts(estado);
        String[][] relleno = new String[listaArts.size()][4];
        /*
        TODO: estas llenando mal el putisimo rellenado del array, eres asco!!
        */
        for(int i = 0; i<listaArts.size();){
            for(int j = 0; j<4; j++){
                relleno[i/4][j] = (String)listaArts.get(i++);
            }
        }
        jTable = new JTable(relleno,alTitColumn);
        /* El método setSelectionMode recibe un entero que define el tipo
        de selección:
        0 -> Sólo se puede seleccionar una fila.
        1 -> Se pueden seleccionar múltiples filas consecutivas.
        2 -> Se pueden seleccionar múltiples filas aunque no sean consecutivas.
        */
        jTable.setSelectionMode(0);
        
        jTable.setRowSelectionAllowed(true);
        jTable.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table =(JTable) me.getSource();
                Point p = me.getPoint();
                if (me.getClickCount() == 2) {
                    Vector vArt=new Vector();
                    jTextFieldCodArt.setEnabled(true);
                    //vArt=(Vector)listaArts.elementAt(jTable.getSelectedRow());
                    int linea = jTable.getSelectedRow();
                    System.out.println(linea);
                    jTextFieldCodArt.setText((String)listaArts.get(0+(linea*4)));
                    mostrarArt((String)listaArts.get(0+(linea*4)));
                    //pongo la tabla a cero
                    jTable = new JTable();
                    jTable.setSelectionMode(0);
                    jScrollPane1.setViewportView(jTable);
                }
            }
        });
        jTable.setFocusable(false);
        jScrollPane1.setViewportView(jTable);
        jTextFieldCodArt.setEnabled(false);
    }//GEN-LAST:event_jButtonGridActionPerformed

    private void jMenuItemVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVolverActionPerformed
        //vuelve a la ventana anterior y la activa
        if(facturado == 1){
            if(javax.swing.JOptionPane.showConfirmDialog(null, 
                                "¿Seguro que desea salir sin aplicar cambios?","Baja",
                                JOptionPane.YES_NO_OPTION)==0){
                this.getParent().setEnabled(true);
                dispose();
            }
        }
        else{
            this.getParent().setEnabled(true);
            dispose();
        }
        
    }//GEN-LAST:event_jMenuItemVolverActionPerformed

    private void jMenuItemClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemClienteActionPerformed
        estado(0);
    }//GEN-LAST:event_jMenuItemClienteActionPerformed

    private void jMenuItemProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemProveedorActionPerformed
        estado(1);
    }//GEN-LAST:event_jMenuItemProveedorActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        if(facturado == 1){
            if(javax.swing.JOptionPane.showConfirmDialog(null, 
                                "¿Seguro que desea salir sin aplicar los cambios?","Baja",
                                JOptionPane.YES_NO_OPTION)==0){
                gestorDB.volver();
                estado(-1);
            }
        }
        else
            estado(-1);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed

    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    private void jTextFieldCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoKeyPressed
        if(evt.getKeyCode()==10){
            if(jTextFieldCodigo.getText().matches("[0-9a-zA-Z]{1,6}")){
                while(jTextFieldCodigo.getText().length()<6){
                    jTextFieldCodigo.setText("0".concat(jTextFieldCodigo.getText()));
                }
                articulos(true);
                botonesFac(false);
                jTextFieldCodArt.grabFocus();
                mostrar(jTextFieldCodigo.getText());
                
            }
            else{
                javax.swing.JOptionPane.showConfirmDialog(null, "Código incorrecto"
                    , "Formulario incorrecto", javax.swing.JOptionPane.PLAIN_MESSAGE);
            }
        }
    }//GEN-LAST:event_jTextFieldCodigoKeyPressed

    private void jTextFieldCodArtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodArtKeyPressed
        if(evt.getKeyCode()==10){
            if(jTextFieldCodArt.getText().matches("[0-9a-zA-Z]{1,6}")){
                while(jTextFieldCodArt.getText().length()<6){
                    jTextFieldCodArt.setText("0".concat(jTextFieldCodArt.getText()));
                }
                mostrarArt(jTextFieldCodArt.getText());
            }
            else{
                javax.swing.JOptionPane.showConfirmDialog(null, "Código incorrecto"
                    , "Formulario incorrecto", javax.swing.JOptionPane.PLAIN_MESSAGE);
            }
        }
    }//GEN-LAST:event_jTextFieldCodArtKeyPressed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        
        facturado = 1;
        
        int unidades = Integer.valueOf(jTextFieldUnidades.getText());
        double precio = Double.valueOf(jTextFieldPrecio.getText());
        double importe = precio*unidades;
        
        gestorDB.actualizar(estado,jTextFieldCodigo.getText(),jTextFieldCodArt.getText(),
        unidades,importe);
        articulos(true);
        botonesFac(true);
        mostrar(jTextFieldCodigo.getText());
        
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jTextFieldUnidadesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldUnidadesKeyPressed
        if(evt.getKeyCode()==10){
            if(!jTextFieldUnidades.getText().matches("[0-9]+")){
                javax.swing.JOptionPane.showConfirmDialog(null, "Por favor introduzca unidades"
                    , "Formulario incorrecto", javax.swing.JOptionPane.PLAIN_MESSAGE);
            }
            else{
                int unidades = Integer.valueOf(jTextFieldUnidades.getText());
                switch(estado){
                    case 0:
                        if(Integer.valueOf(jTextFieldStock.getText()) >= unidades && unidades > 0){
                            double precio = Double.valueOf(jTextFieldPrecio.getText());
                            double importe = precio*unidades;

                            jTextFieldImporte.setText(String.valueOf(round(importe,2)));
                            jTextFieldStock.setText(String.valueOf(
                                    Integer.valueOf(jTextFieldStock.getText())
                                            - unidades
                                    ));
                            botonesArt(true);
                        }
                        else{
                            javax.swing.JOptionPane.showConfirmDialog(null, "Por favor introduzca unidades válidas"
                        , "Formulario incorrecto", javax.swing.JOptionPane.PLAIN_MESSAGE);
                            jTextFieldUnidades.setText("");
                            jTextFieldUnidades.grabFocus();
                        }
                        break;
                        
                    case 1:
                        if(unidades > 0){
                            double precio = Double.valueOf(jTextFieldPrecio.getText());
                            double importe = precio*unidades;

                            jTextFieldImporte.setText(String.valueOf(round(importe,2)));
                            jTextFieldStock.setText(String.valueOf(
                                    Integer.valueOf(jTextFieldStock.getText())
                                            + unidades
                                    ));
                            botonesArt(true);
                        }
                        else{
                            javax.swing.JOptionPane.showConfirmDialog(null, "Por favor introduzca unidades válidas"
                        , "Formulario incorrecto", javax.swing.JOptionPane.PLAIN_MESSAGE);
                            jTextFieldUnidades.setText("");
                            jTextFieldUnidades.grabFocus();
                        }
                        break;
                    
                }
            }
        }
    }//GEN-LAST:event_jTextFieldUnidadesKeyPressed

    private void jButtonCanPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCanPedidoActionPerformed
        articulos(true);
    }//GEN-LAST:event_jButtonCanPedidoActionPerformed

    private void jButtonCancelTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelTodoActionPerformed
        facturado = 0;
        gestorDB.volver();
        javax.swing.JOptionPane.showConfirmDialog(null, "Canceladas las líneas no facturadas"
                    , "Aviso al usuario", javax.swing.JOptionPane.PLAIN_MESSAGE);
        botonesFac(false);
        estado(estado);
    }//GEN-LAST:event_jButtonCancelTodoActionPerformed

    private void jButtonFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFacturaActionPerformed
        if(!jTextFieldCodArt.getText().equals("")){
            if(javax.swing.JOptionPane.showConfirmDialog(null, "Ha introducido una línea no aceptada. "+
                    "Si factura sin aceptar esa línea no será tenida en cuenta, ¿Desea continuar?"
                        , "Aviso al usuario", javax.swing.JOptionPane.YES_NO_OPTION)==0){
                facturado = 0;
                gestorDB.facturar();
                javax.swing.JOptionPane.showConfirmDialog(null, "Líneas facturadas, ya no pueden cancelarse"
                            , "Aviso al usuario", javax.swing.JOptionPane.PLAIN_MESSAGE);
                botonesFac(false);
                estado(estado);
            }
        }else{
            facturado = 0;
                gestorDB.facturar();
                javax.swing.JOptionPane.showConfirmDialog(null, "Líneas facturadas, ya no pueden cancelarse"
                            , "Aviso al usuario", javax.swing.JOptionPane.PLAIN_MESSAGE);
                botonesFac(false);
                estado(estado);
        }
    }//GEN-LAST:event_jButtonFacturaActionPerformed

    private void jButtonSeleccionarArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionarArtActionPerformed
       Vector vArt=new Vector();
        if (jTable.getSelectedRow()==-1) {
        javax.swing.JOptionPane.showConfirmDialog(this,"No ha seleccionado ningún artículo",
        "Seleccionar artículo",javax.swing.JOptionPane.CLOSED_OPTION);
        }else {
            jTextFieldCodArt.setEnabled(true);
            int linea = jTable.getSelectedRow();
            System.out.println(linea);
            jTextFieldCodArt.setText((String)listaArts.get(0+(linea*4)));
            mostrarArt((String)listaArts.get(0+(linea*4)));
            //pongo la tabla a cero
            jTable = new JTable();
            jTable.setSelectionMode(0);
            jScrollPane1.setViewportView(jTable);
        }
    }//GEN-LAST:event_jButtonSeleccionarArtActionPerformed

    private void jTextFieldUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUnidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUnidadesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestionPedidos dialog = new GestionPedidos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonBuscarArt;
    private javax.swing.JButton jButtonCanPedido;
    private javax.swing.JButton jButtonCancelTodo;
    private javax.swing.JButton jButtonFactura;
    private javax.swing.JButton jButtonGrid;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSeleccionarArt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemCliente;
    private javax.swing.JMenuItem jMenuItemProveedor;
    private javax.swing.JMenuItem jMenuItemVolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldCodArt;
    private javax.swing.JTextField jTextFieldCodPost;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldDescripcion;
    private javax.swing.JTextField jTextFieldDomicilio;
    private javax.swing.JTextField jTextFieldImporte;
    private javax.swing.JTextField jTextFieldLocalidad;
    private javax.swing.JTextField jTextFieldNif;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldStock;
    private javax.swing.JTextField jTextFieldTotal;
    private javax.swing.JTextField jTextFieldUnidades;
    // End of variables declaration//GEN-END:variables

private void estado(int state){
        estado = state;
        String titulo = "Gestión Almacén - Pedidos";
        jMenuItemCliente.setEnabled(true);
        jMenuItemProveedor.setEnabled(true);
        switch(state){
            case -1:
                jMenuItemCliente.setEnabled(true);
                jMenuItemProveedor.setEnabled(true);
                break;
            case 0:
                titulo += " - Cliente";
                jMenuItemCliente.setEnabled(false);
                jMenuItemProveedor.setEnabled(false);
                jButtonFactura.setText("Factura");
                break;
            case 1:
                titulo += " - Proveedor";
                jMenuItemCliente.setEnabled(false);
                jMenuItemProveedor.setEnabled(false);
                jButtonFactura.setText("Finalizar");
                break;
        }
        this.setTitle(titulo);
        jTextFieldCodigo.setEnabled(estado != -1);
        jTextFieldCodigo.setEditable(estado != -1);
        jTable = new JTable();
            jTable.setSelectionMode(0);
            jScrollPane1.setViewportView(jTable);
        articulos(false);
        setAll("");
        if(estado != -1){
            jTextFieldCodigo.grabFocus();
        }
        else{
            facturado = 0;
        }
    }

    public void setAll(String cont){
        jTextFieldApellido.setText(cont);
        jTextFieldCodArt.setText(cont);
        jTextFieldCodPost.setText(cont);
        jTextFieldCodigo.setText(cont);
        jTextFieldDescripcion.setText(cont);
        jTextFieldDomicilio.setText(cont);
        jTextFieldImporte.setText(cont);
        jTextFieldLocalidad.setText(cont);
        jTextFieldNif.setText(cont);
        jTextFieldNombre.setText(cont);
        jTextFieldPrecio.setText(cont);
        jTextFieldStock.setText(cont);
        jTextFieldTotal.setText(cont);
        jTextFieldUnidades.setText(cont);
    }
    
    private void mostrar(String cod){
        ArrayList<String> valores = gestorDB.getCliente(cod,estado);
        if(valores.isEmpty()){
            javax.swing.JOptionPane.showConfirmDialog(null, "El Código no existe"
                , "Formulario incorrecto", javax.swing.JOptionPane.PLAIN_MESSAGE);
        }
        else{
            jTextFieldNif.setText(valores.get(0));
            jTextFieldNombre.setText(valores.get(1));
            jTextFieldApellido.setText(valores.get(2));
            jTextFieldDomicilio.setText(valores.get(3));
            jTextFieldLocalidad.setText(valores.get(4));
            jTextFieldCodPost.setText(valores.get(5));
            jTextFieldTotal.setText(valores.get(6));
            jTextFieldCodigo.setEditable(false);
        }
    }
    
    private void mostrarArt(String cod){
        ArrayList<String> valores = gestorDB.getArticulo(cod,estado);
        if(valores.isEmpty()){
            javax.swing.JOptionPane.showConfirmDialog(null, "El Código no existe"
                , "Formulario incorrecto", javax.swing.JOptionPane.PLAIN_MESSAGE);
        }
        else{
            jTextFieldDescripcion.setText(valores.get(0));
            jTextFieldStock.setText(valores.get(1));
            jTextFieldPrecio.setText(valores.get(2));
            jTextFieldUnidades.setEditable(true);
            jTextFieldUnidades.grabFocus();
            botonesSel(false);
            jButtonCanPedido.setEnabled(true);
        }
    }
    
    private void articulos(boolean state){
        
        jTextFieldCodArt.setEnabled(state);
        jTextFieldCodArt.setText("");
        jTextFieldCodArt.grabFocus();
        jTextFieldDescripcion.setEnabled(state);
        jTextFieldDescripcion.setText("");
        jTextFieldImporte.setEnabled(state);
        jTextFieldImporte.setText("");
        jTextFieldPrecio.setEnabled(state);
        jTextFieldPrecio.setText("");
        jTextFieldStock.setEnabled(state);
        jTextFieldStock.setText("");
        jTextFieldTotal.setEnabled(state);
        jTextFieldTotal.setText("");
        jTextFieldUnidades.setEnabled(state);
        jTextFieldUnidades.setEditable(false);
        jTextFieldUnidades.setText("");
        botonesArt(false);
        botonesSel(state);
    }
    
    private void botonesArt(boolean state){
        jButtonAceptar.setEnabled(state);
        jButtonCanPedido.setEnabled(state);
        
    }
    
    private void botonesFac(boolean state){
        jButtonFactura.setEnabled(state);
    }
    
    private void botonesSel(boolean state){
        jTextFieldCodArt.setEnabled(state);
        jButtonBuscarArt.setEnabled(state);
        jButtonGrid.setEnabled(state);
        jButtonSeleccionarArt.setEnabled(state);
    }

    public static double round(double value, int places) {

    long factor = (long) Math.pow(10, places);
    value = value * factor;
    long tmp = Math.round(value);
    return (double) tmp / factor;
    }
    
}
